plugins {
    id 'java'
    id 'application'
}

group = 'com.example'
version = '1.0.0'

sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    // JDBC Drivers
    implementation 'com.microsoft.sqlserver:mssql-jdbc:12.4.2.jre11'
    implementation 'net.sourceforge.jtds:jtds:1.3.1'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.h2database:h2:2.2.224'

    // Connection Pooling
    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'org.apache.commons:commons-dbcp2:2.11.0'
    implementation 'com.mchange:c3p0:0.9.5.5'
    implementation 'org.apache.tomcat:tomcat-jdbc:10.1.15'

    // Spring Framework
    implementation 'org.springframework:spring-jdbc:5.3.30'
    implementation 'org.springframework:spring-context:5.3.30'
    implementation 'org.springframework:spring-tx:5.3.30'
    implementation 'org.springframework:spring-orm:5.3.30'

    // Hibernate ORM
    implementation 'org.hibernate:hibernate-core:5.6.15.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.6.15.Final'

    // JPA
    implementation 'javax.persistence:javax.persistence-api:2.2'

    // MyBatis
    implementation 'org.mybatis:mybatis:3.5.14'
    implementation 'org.mybatis:mybatis-spring:3.0.3'

    // Apache Kafka
    implementation 'org.apache.kafka:kafka-clients:3.6.0'

    // JNDI API
    implementation 'javax.naming:jndi:1.2.1'

    // Servlet API (for JNDI in servlet containers)
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.14'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

compileJava {
    options.encoding = 'UTF-8'
}

javadoc {
    options.encoding = 'UTF-8'
}

